[ClassVersion("1.0.0.0"), FriendlyName("xWebApplication")]
class MSFT_xWebApplication : OMI_BaseResource
{
    [Key, Description("Name of website with which web application is associated")] String Website;
    [Key, Description("Name of web application")] String Name;
    [Required, Description("Web application pool for the web application")] String WebAppPool;
    [Required, Description("Physical path for the web application directory")] String PhysicalPath;
    [Write, Description("Whether web application should be present or absent"), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] String Ensure;
    [Write, Description("SSLFlags for the application"), ValueMap{"","Ssl","SslNegotiateCert","SslRequireCert","Ssl128"},Values{"","Ssl","SslNegotiateCert","SslRequireCert","Ssl128"}] String SslFlags[];
    [write, EmbeddedInstance("MSFT_xWebApplicationAuthenticationInformation"), Description("Hashtable containing authentication information (Anonymous, Basic, Digest, Windows)")] String AuthenticationInfo;
    [Write, Description ("Allows a Application to automatically start without a request")] Boolean PreloadEnabled;
    [Write, Description ("Enables Autostart on an Application.")] Boolean ServiceAutoStartEnabled;
    [Write, Description ("Adds a AutostartProvider")] String ServiceAutoStartProvider;
    [Write, Description ("Adds a AutostartProvider ApplicationType")] String ApplicationType;
    [Write, Description ("Adds EnabledProtocols on an Application"), ValueMap{"http","https","net.tcp","net.msmq","net.pipe"},Values{"http","https","net.tcp","net.msmq","net.pipe"}] String EnabledProtocols[];
};

[ClassVersion("1.0.0")]
class MSFT_xWebApplicationAuthenticationInformation
{
    [Write, Description ("Enable anonymous authentication")] Boolean Anonymous;
    [Write, Description ("Enable basic authentication")] Boolean Basic;
    [Write, Description ("Enable digest authentication")] Boolean Digest;
    [Write, Description ("Enable Windows authentication")] Boolean Windows;
};
