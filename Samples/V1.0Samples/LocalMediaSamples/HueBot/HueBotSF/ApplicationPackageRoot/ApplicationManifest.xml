<?xml version="1.0" encoding="utf-8"?>
<ApplicationManifest xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" ApplicationTypeName="HueBotSFType" ApplicationTypeVersion="2.0.0" xmlns="http://schemas.microsoft.com/2011/01/fabric">
  <Parameters>
    <Parameter Name="HueBot_InstanceCount" DefaultValue="-1" />
  </Parameters>
  <!-- Import the ServiceManifest from the ServicePackage. The ServiceManifestName and ServiceManifestVersion 
       should match the Name and Version attributes of the ServiceManifest element defined in the 
       ServiceManifest.xml file. -->
  <ServiceManifestImport>
    <ServiceManifestRef ServiceManifestName="HueBotPkg" ServiceManifestVersion="1.0.1" />
    <ConfigOverrides />
    <Policies>
      <EndpointBindingPolicy EndpointRef="ServiceEndpoint" CertificateRef="HueBotCert" />
      <EndpointBindingPolicy EndpointRef="SignalingPort" CertificateRef="HueBotCert" />
      <!-- Needed for installing media binaries -->
      <RunAsPolicy CodePackageRef="Code" UserRef="SetupAdminUser" EntryPointType="Setup" />
    </Policies>
  </ServiceManifestImport>
  <DefaultServices>
    <!-- The section below creates instances of service types, when an instance of this 
         application type is created. You can also create one or more instances of service type using the 
         ServiceFabric PowerShell module.
         The attribute ServiceTypeName below must match the name defined in the imported ServiceManifest.xml file. -->
    <Service Name="HueBot" ServicePackageActivationMode="ExclusiveProcess">
      <StatelessService ServiceTypeName="HueBotType" InstanceCount="[HueBot_InstanceCount]">
        <SingletonPartition />
      </StatelessService>
    </Service>
  </DefaultServices>
  <Principals>
    <Users>
      <!-- Define references to the LocalSystem and NetworkService accounts to be used elsewhere in this file -->
      <User Name="LocalSystemAccount" AccountType="LocalSystem" />
      <User Name="NetworkServiceAccount" AccountType="NetworkService" />
      <!-- Needed for installing media binaries -->
      <User Name="SetupAdminUser">
        <MemberOf>
          <SystemGroup Name="Administrators" />
        </MemberOf>
      </User>
    </Users>
  </Principals>
  <!-- By default, we want all services to be running as NetworkService. Fabric itself runs as NetworkService,
       and would run our services as NetworkService as well. This declaration just makes it explicit. -->
  <Policies>
    <DefaultRunAsPolicy UserRef="NetworkServiceAccount" />
    <SecurityAccessPolicies>
      <!-- This is needed to give NetworkService permissions to access the private key for all certificates -->
      <SecurityAccessPolicy ResourceRef="HueBotSecretCert" PrincipalRef="NetworkServiceAccount" ResourceType="Certificate" />
    </SecurityAccessPolicies>
  </Policies>
  <Certificates>
    <!-- The declaration "SecretsCertificate" does not imply that it's needed to access secrets. Instead, the declaration
         should be read as "Certificate for which the service needs access to the private key" which is true for accessing
         secrets, using the certificate as a client certificate for MTLS, etc. -->
    <SecretsCertificate X509StoreName="MY" X509FindValue="ABC0000000000000000000000000000000000CBA" Name="HueBotSecretCert" />
    <!-- The declaration "EndpointCertificate" implies that it'll be bound to an endpoint -->
    <EndpointCertificate X509StoreName="MY" X509FindValue="ABC0000000000000000000000000000000000CBA" Name="HueBotCert" />
  </Certificates>
</ApplicationManifest>
