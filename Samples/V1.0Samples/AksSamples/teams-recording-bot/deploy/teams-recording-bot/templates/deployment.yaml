{{- $fullName := include "fullName" . -}}
{{- $namespace := include "namespace" . -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullName }}
  namespace: {{ $namespace }}
  labels:
    app: {{ $fullName }}
    helmVersion: {{ .Chart.Version }}
    helmAppVersion: {{ .Chart.AppVersion }}
    helmName: {{ .Chart.Name }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.scale.replicaCount }}
{{- end }}
  serviceName: {{ $fullName }}
  podManagementPolicy: "Parallel"
  template:
    metadata:
      name: {{ $fullName }}
      labels:
        app: {{ $fullName }}
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": windows
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: agentpool
                operator: In
                values:
                - {{ .Values.node.target }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "app"
                  operator: In
                  values:
                  - {{ $fullName }}
              topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriod }}
      containers:
      - name: recording-bot
        image: "{{ .Values.image.domain }}/teams-recording-bot:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        lifecycle:
          preStop:
            exec:
              command:
              - powershell
              - Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope LocalMachine;
              - .\halt_termination.ps1
        ports:
        - containerPort: {{ .Values.container.port }}
        - containerPort: {{ .Values.internal.media }}
        volumeMounts:
        - mountPath: "C:/certs/"
          name: certificate
          readOnly: true
        env:
        - name: AzureSettings__BotName
          valueFrom:
            secretKeyRef:
              name: bot-application-secrets
              key: botName
        - name: AzureSettings__AadAppId
          valueFrom:
            secretKeyRef:
              name: bot-application-secrets
              key: applicationId
        - name: AzureSettings__AadAppSecret
          valueFrom:
            secretKeyRef:
              name: bot-application-secrets
              key: applicationSecret
        - name: AzureSettings__ServiceDnsName
          value: {{ .Values.host }}
        - name: AzureSettings__InstancePublicPort
          value: "{{ .Values.public.media }}"
        - name: AzureSettings__InstanceInternalPort
          value: "{{ .Values.internal.media }}"
        - name: AzureSettings__CallSignalingPort
          value: "{{ .Values.internal.port }}"
        - name: AzureSettings__PlaceCallEndpointUrl
          value: https://graph.microsoft.com/v1.0
        - name: AzureSettings__ArchiveDuration
          value: "{{ .Values.container.env.azureSetting.archiveDuration }}"
        - name: AzureSettings__AudioFrameDuration
          value: "{{ .Values.container.env.azureSetting.audioFrameDuration }}"
        - name: AzureSettings__CaptureEvents
          value: "{{ .Values.container.env.azureSetting.captureEvents }}"
        - name: AzureSettings__EventsFolder
          value: "{{ .Values.container.env.azureSetting.eventsFolder }}"
        - name: AzureSettings__MediaFolder
          value: "{{ .Values.container.env.azureSetting.mediaFolder }}"
        - name: AzureSettings__TopicKey
          value: "{{ .Values.container.env.azureSetting.eventhubKey }}"
        - name: AzureSettings__TopicName
          value: "{{ .Values.container.env.azureSetting.eventhubName }}"
        - name: AzureSettings__RegionName
          value: "{{ .Values.container.env.azureSetting.eventhubRegion }}"
        - name: AzureSettings__IsStereo
          value: "{{ .Values.container.env.azureSetting.isStereo }}"
        - name: AzureSettings__WAVSampleRate
          value: "{{ .Values.container.env.azureSetting.wavSampleRate }}"
        - name: AzureSettings__WAVQuality
          value: "{{ .Values.container.env.azureSetting.wavQuality }}"
        - name: AzureSettings__PodName
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      nodeSelector:
        agentpool: {{ .Values.node.target }}
      volumes:
      - name: certificate
        secret:
          secretName: ingress-tls
      imagePullSecrets:
      - name: acr-secret
  selector:
    matchLabels:
      app: {{ $fullName }}
